from google.colab import files
uploaded = files.upload()

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df=pd.read_csv('house price data.csv')

# Specify the columns to remove by name
columns_to_remove = ["view", "waterfront", "country","condition","date"]


# Drop the columns
df = df.drop(columns_to_remove, axis=1)  # axis=1 indicates columns

# Save the modified DataFrame
df.to_csv("modified_dataset.csv", index=False)
for col in df.columns:
…df["yr_renovated"] = df["yr_renovated"].replace(0, 1997)


from sklearn.preprocessing import OneHotEncoder,StandardScaler
one_hot_encoded_data = pd.get_dummies(df,columns = ["city","street","statezip","yr_built","yr_renovated"])
x=one_hot_encoded_data.drop(["price"],axis=1)
y=one_hot_encoded_data[["price"]]
from sklearn.model_selection import train_test_split
…
regressor.fit(x_train_scaled, y_train)

y_pred=regressor.predict(x_test_scaled)
x_pred=regressor.predict(x_train_scaled)

from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, y_pred)
print("Mean absolute Error:", mae)
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, y_pred)
print("Mean square Error:", mse)

from sklearn.metrics import r2_score
r_squared = r2_score(y_test, y_pred)
print("R-squared:", r_squared)

print('Train Score: ', regressor.score(x_train_scaled, y_train))
print('Test Score: ', regressor.score(x_test_scaled, y_test))

print(df)

